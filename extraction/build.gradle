buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: "com.googlecode.json-simple", name:"json-simple", version:"1.1"
    }
}
// "basic" configuration in it



plugins {
  id 'distribution'
  id 'maven-publish'
  id 'groovy'
}

group 'de.dfki.mary'
version '0.5.2-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'http://cloudark:8081/artifactory/local'
        credentials {
            username = findProperty('cloudarkUser')
            password = findProperty('cloudarkApiKey')
        }
    }
}

configurations {
    data
    tonguemodel
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.2"
    data group: 'org.m2ci.msp', name: 'mngu0-data-tongueModelWeights-fixedSpeaker', version: '0.1-SNAPSHOT', ext:'zip'
}

ext {
    config_file = new File("../src/configuration/" + System.getProperty("eval_name") + ".json")
}

import groovy.json.* // To load the JSON configuration file
import java.util.*

def slurper = new JsonSlurper()
def config = slurper.parseText( config_file.text )


import java.util.ArrayList;
import java.util.StringTokenizer;

import java.io.File;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.FileReader;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;

import org.json.simple.JSONObject;
import org.json.simple.JSONArray;
import org.json.simple.parser.ParseException;
import org.json.simple.parser.JSONParser;

/***************************************************************************************
 ** Standard extraction
 ***************************************************************************************/
(new File(DataFileFinder.getFilePath(config.data.list_files))).eachLine{ basename ->
    project(":$basename") {
        buildDir = project.parent.buildDir
        apply plugin: "de.dfki.mary.coefficientextraction"
    }
}

/* Generate the test part */
(new File(DataFileFinder.getFilePath("list_test"))).eachLine{ basename ->
    project(":$basename") {
        buildDir = project.parent.buildDir
        apply plugin: "de.dfki.mary.coefficientextraction"
    }
}

task extract() {
    (new File(DataFileFinder.getFilePath(config.data.list_files))).eachLine { basename ->
        dependsOn ":${basename}:extract"
    }

    (new File(DataFileFinder.getFilePath("list_test"))).eachLine { basename ->
        dependsOn ":${basename}:extract"
    }
}

/***************************************************************************************************
 *** Publishing part
 ***************************************************************************************************/

group "org.m2ci.msp"
version '0.1-SNAPSHOT'

distributions {
  main {
    contents {
        from extract
        def cmp = []
        config.models.cmp.streams.each { stream ->
            into(stream.coeffDir) {
                from "$buildDir/${stream.coeffDir}"
            }
            cmp << stream.coeffDir
        }

        if (config.models.ffo) {
            config.models.ffo.streams.each { stream ->
                if (! (stream.coeffDir in cmp)) {
                    into(stream.coeffDir) {
                        from "$buildDir/${stream.coeffDir}"
                    }
                }
            }
        }
    }
  }
}

publishing {
  publications {
    main(MavenPublication) {
      artifact distZip
    }
  }
  repositories {
    maven {
      url "http://cloudark:8081/artifactory/data-snapshot-local/"
      credentials {
        username = findProperty('cloudarkUser')
        password = findProperty('cloudarkApiKey')
      }
    }
  }
}
