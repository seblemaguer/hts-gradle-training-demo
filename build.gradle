/***************************************************************************************
 ** Build script configuration
 ***************************************************************************************/
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
        maven {
            url 'https://oss.jfrog.org/artifactory/oss-release-local'
        }
    }

    dependencies {
        classpath group: "com.googlecode.json-simple", name:"json-simple", version:"1.1"

        classpath group: "de.dfki.mary", name: "marytts-common", version: "6.0.1-SNAPSHOT"

        // Label part
        classpath group: "de.dfki.mary", name: "gradle-marytts-dict-extraction", version: "0.1-SNAPSHOT"
        classpath group: "de.dfki.mary", name: "gradle-marytts-kaldi-mfa-plugin", version: "0.4-SNAPSHOT"
        classpath group: "de.dfki.mary", name: "gradle-marytts-align-plugin", version: "0.1-SNAPSHOT"

        // Acoustic parameters part
        classpath group: "de.dfki.mary", name: "gradle-coefficientextraction-plugin", version: "1.0-SNAPSHOT"

        // HTS specificities
        classpath group: "de.dfki.mary", name: "gradle-hts-coefficients-packing-plugin", version: "1.0-SNAPSHOT"
        classpath group: "de.dfki.mary", name: "gradle-htsvoicebuilding-plugin", version: "2.3.1.1-SNAPSHOT"
    }
}


plugins {
    id 'distribution'
    id 'maven-publish'
    id 'groovy'
    id "com.dorongold.task-tree" version "1.3.1"
}

//optional configuration
taskTree{
    noRepeat = true  //do not print a sub-tree in the task-tree more than once
    impliesSubProjects = true  //do not print task-tree for child projects in a multi-project
}

configurations {
    data
}

repositories {
    ivy {
        url 'http://festvox.org/'
        layout 'pattern', {
            artifact '[classifier]/[classifier]/packed/[module]-[revision].[ext]'
        }
    }
}


/***************************************************************************************
 ** Requires
 ***************************************************************************************/
import marytts.runutils.Mary

if (System.getProperty("eval_name")) {

    // ext.vb_configuration = gradle.vb_configuration

    /***************************************************************************************
     **  Mary startup (FIXME: see for the shutdown also!)
     ***************************************************************************************/
    Mary.startup()

    /***************************************************************************************
     ** NLP part
     ***************************************************************************************/
    // Apply plugins
    apply plugin: 'marytts.dict-extraction-en'
    apply plugin: "de.dfki.mary.voicebuilding.marytts-kaldi-mfa"
    apply plugin: "marytts.align"

    // Alignment
    // generateDictionary.dependsOn "convertTextPrompts"
    generateDictionary.locale = "en_US"
    generateDictionary.srcDir = gradle.vb_configuration.data.text_dir
    extractMFALab.srcDir = gradle.vb_configuration.data.text_dir
    prepareForcedAlignment.wavDir = gradle.vb_configuration.data.wav_dir
    prepareForcedAlignment.dictFile = generateDictionary.dictFile

    // Generate feature
    addDurationToUtt.dependsOn "runForcedAlignment"
    addDurationToUtt.srcTextGridDir = file("$buildDir/TextGrid/forcedAlignment") // runForcedAlignment.destDir (FIXME: forcedAlignment subdir !)
    addDurationToUtt.srcUttDir = generateDictionary.destDir

    /***************************************************************************************
     ** Acoustic extraction part
     ***************************************************************************************/
    // Apply plugins
    apply plugin: "de.dfki.mary.coefficientextraction"
    apply plugin: "de.dfki.mary.htspacking"

    // extraction => packing
    generateCMP.origin_directory = file("src/cmu_slt_arctic/wav")
    generateCMP.dependsOn "extract"
    if (gradle.vb_configuration.models.ffo) {
        generateFFO.dependsOn "extract"
    }


    /***************************************************************************************
     ** Training part
     ***************************************************************************************/
    // Apply plugins
    apply plugin: "de.dfki.mary.htsvoicebuilding"


    // Linking NLP to training
    generateFullMLF.lab_dir = generateHTSLabels.fullLabDir
    generateFullList.lab_dir = generateHTSLabels.fullLabDir
    generateMonoMLF.lab_dir = generateHTSLabels.monoLabDir
    generateMonophoneList.lab_dir = generateHTSLabels.monoLabDir
    generateGVLabFiles.full_lab_dir = generateHTSLabels.fullLabDir
    generateSCPFile.label_directory = generateHTSLabels.fullLabDir

    // Linking acoustic parameters to training
    generateSCPFile.data_directory = generateCMP.cmp_directory

    /***************************************************************************************
     ** Entry point
     ***************************************************************************************/
    build.dependsOn "train"
}
