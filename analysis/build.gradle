plugins {
  id 'distribution'
  id 'maven-publish'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://cloudark:8081/artifactory/local'
        credentials {
            username = findProperty('cloudarkUser')
            password = findProperty('cloudarkApiKey')
        }
    }
}

configurations {
    acoustic
    ema
}

dependencies {
    acoustic group: 'org.m2ci.msp', name: System.getProperty("eval_name"), version: '0.1-SNAPSHOT', ext:'zip'
    ema group: 'org.m2ci.msp', name: "mngu0_ema_tongue", version: '0.1-SNAPSHOT', ext:'zip'
}

ext {
    utilsDir = file("$rootDir/utils")
    config_file = new File("../src/configuration/" + System.getProperty("eval_name") + ".json")
    dataset_root = "$buildDir/dataset/"
}


import groovy.json.*

/***************************************************************************************************
 ***
 ***************************************************************************************************/

// Specific to this architecture (FIXME: maybe generalize it ?)
def eval_name = System.getProperty("eval_name")
def synth_dir = "${rootProject.projectDir}/../synthesis/build/output"
def nat_dir = dataset_root
def model_file = "${rootProject.projectDir}/../training/build/raw/"

def slurper = new JsonSlurper()
def config_file =  new File("$model_file/config.json")
def config = slurper.parseText( config_file.text )

def list_file = new File(DataFileFinder.getFilePath("list_test"))

def nat_lab_dir = DataFileFinder.getFilePath(config.data.mono_lab_dir)
def list = "list_test"

def channels = ["T3", "T2", "T1", "ref", "jaw", "upperlip", "lowerlip"]
if (eval_name.contains("weight") || eval_name.contains("tongue")) {
    channels = ["T3", "T2", "T1", "ref"]
}


/*******************************************************************************************
 ** Utils
 *******************************************************************************************/

task extractDataArchive {
    def datasetDir = file(dataset_root)
    outputs.files datasetDir

    doLast {
        copy {
            from configurations.acoustic.collect { zipTree(it) }
            into datasetDir
            eachFile {
                def newPath = it.relativePath.segments[1..-1].join("/")
                it.relativePath = RelativePath.parse(true, newPath)
            }
        }


        copy {
            from configurations.ema.collect { zipTree(it) }
            into datasetDir
            eachFile {
                def newPath = it.relativePath.segments[1..-1].join("/")
                it.relativePath = RelativePath.parse(true, newPath)
            }
        }
    }
}
task adaptDurToLab() {
    // dependsOn "extractDataArchive"

    list_file.eachLine { line ->
        outputs.files "$buildDir/lab/${line}.lab"
    }

    doLast {
        // FIXME: tmp for debug
        (new File("$buildDir/lab")).mkdirs()
        list_file.eachLine { line ->
            exec {
                commandLine "perl", "utils/duration2htk.pl", "${synth_dir}/normal/${line}.dur", "$buildDir/lab/${line}.lab"
            }
        }
    }
}


apply plugin: "de.dfki.mary.ttsanalysis"

task generateGlobalReport() {
    dependsOn "generateAcousticReport"
}

/***************************************************************************************************
 *** Publishing part
 ***************************************************************************************************/

group "org.m2ci.msp"
version '0.1'

distributions {
  main {
    contents {
        from generateGlobalReport
    }
  }
}

publishing {
  publications {
    main(MavenPublication) {
      artifact distZip
    }
  }
  repositories {
    maven {
      url "http://cloudark:8081/artifactory/data-release-local/"
      credentials {
        username = findProperty('cloudarkUser')
        password = findProperty('cloudarkApiKey')
      }
    }
  }
}
